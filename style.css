/* static/style.css */
@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;700&display=swap');

:root {
    --bg-dark: #1a1a2e;
    --bg-light: #16213e;
    --primary: #0f3460;
    --secondary: #e94560;
    --accent-blue: #33a1ff;
    --accent-orange: #ff8c00;
    --text-light: #f0f0f0;
    --text-dark: #a0a0a0;
    --border-color: rgba(255, 255, 255, 0.1);
    --card-bg: rgba(255, 255, 255, 0.05);
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Roboto', sans-serif;
    background: var(--bg-dark);
    color: var(--text-light);
    line-height: 1.6;
}

.container {
    padding: 2rem;
    max-width: 1400px;
    margin: 0 auto;
}

header {
    text-align: center;
    padding: 1.5rem;
    background: var(--primary);
}

/* Tab Navigation */
.tab-nav {
    display: flex;
    justify-content: center;
    margin-bottom: 2rem;
    border-bottom: 1px solid var(--border-color);
}

.tab-link {
    background: none;
    border: none;
    color: var(--text-dark);
    padding: 1rem 1.5rem;
    cursor: pointer;
    font-size: 1.1rem;
    font-weight: bold;
    position: relative;
    transition: color 0.3s ease;
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.tab-link:hover {
    color: var(--text-light);
}

.tab-link::after {
    content: '';
    position: absolute;
    bottom: -1px;
    left: 0;
    width: 100%;
    height: 3px;
    background: var(--secondary);
    transform: scaleX(0);
    transition: transform 0.3s ease;
}

.tab-link.active {
    color: var(--text-light);
}

.tab-link.active::after {
    transform: scaleX(1);
}

/* Tab Content */
.tab-pane {
    display: none;
}

.tab-pane.active {
    display: block;
    animation: fadeIn 0.5s ease-out;
}

@keyframes fadeIn {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
}

/* Input Tab Layout */
.input-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
    gap: 2rem;
}

.card {
    background: var(--card-bg);
    border: 1px solid var(--border-color);
    border-radius: 10px;
    padding: 1.5rem;
    backdrop-filter: blur(10px);
}

.plot-card {
    padding: 1rem;
    height: 70vh; /* Make plot cards tall */
}

h2, h3 {
    color: var(--secondary);
    margin-bottom: 1rem;
    border-bottom: 1px solid var(--border-color);
    padding-bottom: 0.5rem;
}

.input-group {
    margin-bottom: 1rem;
}

input[type="number"] {
    background: var(--bg-dark);
    border: 1px solid var(--border-color);
    color: var(--text-light);
    padding: 0.5rem;
    border-radius: 5px;
    width: 100px;
}

button {
    background: var(--primary);
    color: var(--text-light);
    border: none;
    padding: 0.6rem 1.2rem;
    border-radius: 5px;
    cursor: pointer;
    font-weight: bold;
    transition: background 0.3s ease;
}

button:hover {
    background: #e94560;
}

.cta-button {
    width: 100%;
    padding: 0.8rem;
    margin-top: 1rem;
    font-size: 1.1rem;
    background: var(--secondary);
}

/* Table styling */
.table-wrapper {
    max-height: 400px;
    overflow-y: auto;
}

table {
    width: 100%;
    border-collapse: collapse;
    margin-top: 1rem;
}

th {
    background: var(--primary);
    text-align: left;
    padding: 0.75rem;
    position: sticky;
    top: 0;
}

td {
    padding: 0.75rem;
    border-bottom: 1px solid var(--border-color);
}

tbody tr:hover {
    background: rgba(255, 255, 255, 0.08);
}

/* Plotly styling */
.plot-div {
    width: 100%;
    height: 100%;
}

/* Spinner Animation */
.spinner {
    border: 4px solid rgba(255, 255, 255, 0.3);
    border-radius: 50%;
    border-top: 4px solid var(--secondary);
    width: 30px;
    height: 30px;
    animation: spin 1s linear infinite;
    margin: 1rem auto 0;
}

@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}